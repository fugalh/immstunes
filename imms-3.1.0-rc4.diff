Index: imms-3.1.0-rc4/Makefile
===================================================================
--- imms-3.1.0-rc4.orig/Makefile	2008-10-01 11:23:17.000000000 -0600
+++ imms-3.1.0-rc4/Makefile	2008-10-01 11:24:54.000000000 -0600
@@ -9,6 +9,7 @@ configure: configure.ac
 	autoheader
 	aclocal
 	autoconf
+	[ ! -x config.status ] || ./config.status --recheck
 
 immsconf.h: configure
 	$(error Please run the "configure" script)
@@ -31,6 +32,8 @@ dist: immsconf.h distclean
 	rm -rf /tmp/imms-$(VERSION)/
 	mv configure autogen.sh
 
+all: configure
+
 vars.mk:;
 
 %:
Index: imms-3.1.0-rc4/immsd/immsd.cc
===================================================================
--- imms-3.1.0-rc4.orig/immsd/immsd.cc	2008-10-01 11:23:17.000000000 -0600
+++ imms-3.1.0-rc4/immsd/immsd.cc	2008-10-01 11:25:28.000000000 -0600
@@ -2,6 +2,7 @@
 #include <errno.h>
 #include <signal.h>
 #include <unistd.h>
+#include <sys/stat.h>
 
 #include <iostream>
 #include <sstream>
@@ -258,7 +259,7 @@ int main(int argc, char **argv)
 
     signal(SIGINT,  quit);
     signal(SIGTERM, quit);
-    signal(SIGPIPE, SIG_IGN);
+    signal(SIGPIPE, quit);
 
     GSource* ts = g_timeout_source_new(500);
     g_source_attach(ts, NULL);
Index: imms-3.1.0-rc4/configure.ac
===================================================================
--- imms-3.1.0-rc4.orig/configure.ac	2008-10-01 11:23:17.000000000 -0600
+++ imms-3.1.0-rc4/configure.ac	2008-10-01 11:25:28.000000000 -0600
@@ -68,6 +68,22 @@ else
     AC_MSG_RESULT([yes])
 fi
 
+AC_MSG_CHECKING([for usability of initstate_r])
+
+AC_TRY_COMPILE([#include <stdlib.h>],[
+  static struct random_data rand_data;
+  static char rand_state[256];
+  initstate_r(0, rand_state, sizeof(rand_state), &rand_data);
+  exit(0);
+], initstate_r_works=yes,)
+
+if test "$initstate_r_works" != "yes"; then
+    AC_MSG_RESULT([no])
+    AC_DEFINE(INITSTATE_BUG,, [initstate_r is buggy])
+else
+    AC_MSG_RESULT([yes])
+fi
+
 AC_CHECK_LIB(z, compress,, [with_zlib=no])
 AC_CHECK_HEADERS(zlib.h,, [with_zlib=no])
 if test "$with_zlib" = "no"; then
@@ -80,13 +96,11 @@ if test "$with_sqlite" = "no"; then
     AC_MSG_ERROR([sqlite >= 3.2.2 required and missing.])
 fi
 
-AC_CHECK_LIB(pcre, pcre_compile,, [with_pcre=no])
-AC_CHECK_HEADERS(pcre.h,, [with_pcre_1=no])
-if test "$with_pcre_1" = "no"; then
-    AC_CHECK_HEADERS(pcre/pcre.h,, [with_pcre=no])
-fi
+PKG_CHECK_MODULES([pcre], [libpcre], [], [with_pcre=no])
 if test "$with_pcre" = "no"; then
     AC_MSG_ERROR([PCRE required and missing.])
+else
+    LIBS="$LIBS $pcre_LIBS"
 fi
 
 if test "$enable_analyzer" != "no"; then
@@ -125,10 +139,14 @@ if test "$enable_analyzer" != "no"; then
 fi
 
 AC_CHECK_TOOL(OBJCOPY, objcopy)
+AC_CHECK_TOOL(OBJDUMP, objdump)
+if test "x$OBJCOPY" = "x"; then
+    AC_CHECK_TOOL(OBJCOPY, gobjcopy)
+    AC_CHECK_TOOL(OBJDUMP, gobjdump)
+fi
 if test "x$OBJCOPY" = "x"; then
     AC_MSG_ERROR("objcopy from GNU binutils >= 2.11.90 not found")
 fi
-AC_CHECK_TOOL(OBJDUMP, objdump)
 dnl extract target and architecture if objdump was found
 if test "x$OBJDUMP" = "x"; then :; else
     AC_MSG_CHECKING(for object target)
Index: imms-3.1.0-rc4/rules.mk
===================================================================
--- imms-3.1.0-rc4.orig/rules.mk	2008-10-01 11:23:17.000000000 -0600
+++ imms-3.1.0-rc4/rules.mk	2008-10-01 11:25:28.000000000 -0600
@@ -14,12 +14,11 @@ link = $(CXX) $(filter-out %.a,$1) $(fil
 %.o: %.c; $(call compile, $(CC), $<, $@, $($*-CFLAGS) $(CFLAGS) $($*-CPPFLAGS) $(CPPFLAGS))
 %: %.o; $(call link, $^ $($*-OBJ) $(LIBS), $@, $($*-LIBS) $(LDFLAGS))
 %.so:
-	$(CXX) $^ $($*-OBJ) $($*-LIBS) $(LIBS) \
-	    $(LDFLAGS) \
-            -shared -Wl,-z,defs,-soname,$@ -o $@
+	$(CXX) -flat_namespace -undefined suppress -o $@ -bundle $^ $($*-OBJ) $($*-LIBS) $(LIBS) \
+	    $(LDFLAGS) -o $@
 
 %-data.o: %
-	objcopy -I binary -O $(OBJCOPYTARGET) -B $(OBJCOPYARCH) --rename-section .data=.rodata,alloc,load,readonly,data,contents $< $@
+	$(OBJCOPY) -I binary -O $(OBJCOPYTARGET) -B $(OBJCOPYARCH) --rename-section .data=.rodata,alloc,load,readonly,data,contents $< $@
 
 # macros that expand to the object files in the given directories
 objects=$(sort $(notdir $(foreach type,c cc,$(call objects_$(type),$1))))
Index: imms-3.1.0-rc4/vars.mk.in
===================================================================
--- imms-3.1.0-rc4.orig/vars.mk.in	2008-10-01 11:23:17.000000000 -0600
+++ imms-3.1.0-rc4/vars.mk.in	2008-10-01 11:25:28.000000000 -0600
@@ -4,6 +4,8 @@ VERSION = @PACKAGE_VERSION@
 INSTALL = @INSTALL@
 prefix = @prefix@
 PREFIX = $(prefix)
+OBJCOPY = @OBJCOPY@
+OBJDUMP = @OBJDUMP@
 OBJCOPYTARGET = @OBJCOPYTARGET@
 OBJCOPYARCH = @OBJCOPYARCH@
 exec_prefix = @exec_prefix@
Index: imms-3.1.0-rc4/immscore/immsutil.cc
===================================================================
--- imms-3.1.0-rc4.orig/immscore/immsutil.cc	2008-10-01 11:23:17.000000000 -0600
+++ imms-3.1.0-rc4/immscore/immsutil.cc	2008-10-01 11:25:28.000000000 -0600
@@ -27,6 +27,7 @@ int imms_random(int max)
 {
     int rand_num;
     static bool initialized = false;
+#ifndef INITSTATE_BUG
     static struct random_data rand_data;
     static char rand_state[256];
     if (!initialized)
@@ -36,6 +37,14 @@ int imms_random(int max)
         initialized = true;
     }
     random_r(&rand_data, &rand_num);
+#else
+    if (!initialized)
+    {
+        srandom(time(0));
+        initialized = true;
+    }
+    rand_num = random();
+#endif
     double cof = rand_num / (RAND_MAX + 1.0);
     return (int)(max * cof);
 }
Index: imms-3.1.0-rc4/clients/audacious/audaciousinterface.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ imms-3.1.0-rc4/clients/audacious/audaciousinterface.c	2008-10-01 11:25:28.000000000 -0600
@@ -0,0 +1,177 @@
+#include <gtk/gtk.h>
+
+#ifdef BMP
+#include <bmp/configdb.h>
+#include <bmp/util.h>
+#include <bmp/plugin.h>
+#elif AUDACIOUS
+#include <audacious/configdb.h>
+#include <audacious/util.h>
+#include <audacious/plugin.h>
+#endif
+#include "immsconf.h"
+#include "cplugin.h"
+
+
+int use_xidle = 1;
+int poll_tag = 0;
+
+GtkWidget *configure_win = NULL, *about_win = NULL, *xidle_button = NULL;
+
+gint poll_func(gpointer unused)
+{
+    imms_poll();
+    return TRUE;
+}
+
+void read_config(void)
+{
+    ConfigDb *cfgfile;
+
+    if ((cfgfile = cfg_db_open()) != NULL)
+    {
+        cfg_db_get_int(cfgfile, "imms", "xidle", &use_xidle);
+        cfg_db_close(cfgfile);
+    }
+}
+
+void init(void)
+{
+    imms_init();
+    read_config();
+    imms_setup(use_xidle);
+    poll_tag = gtk_timeout_add(200, poll_func, NULL);
+}
+
+void cleanup(void)
+{
+    imms_cleanup();
+
+    if (poll_tag)
+        gtk_timeout_remove(poll_tag);
+
+    poll_tag = 0;
+}
+
+void configure_ok_cb(gpointer data)
+{
+    ConfigDb *cfgfile = cfg_db_open();
+
+    use_xidle = !!GTK_TOGGLE_BUTTON(xidle_button)->active;
+
+    cfg_db_set_int(cfgfile, "imms", "xidle", use_xidle);
+    cfg_db_close(cfgfile);
+
+    imms_setup(use_xidle);
+    gtk_widget_destroy(configure_win);
+}  
+
+#define ADD_CONFIG_CHECKBOX(pref, title, label, descr)                          \
+    pref##_frame = gtk_frame_new(title);                                        \
+    gtk_box_pack_start(GTK_BOX(configure_vbox), pref##_frame, FALSE, FALSE, 0); \
+    pref##_vbox = gtk_vbox_new(FALSE, 10);                                      \
+    gtk_container_set_border_width(GTK_CONTAINER(pref##_vbox), 5);              \
+    gtk_container_add(GTK_CONTAINER(pref##_frame), pref##_vbox);                \
+                                                                                \
+    pref##_desc = gtk_label_new(label);                                         \
+                                                                                \
+    gtk_label_set_line_wrap(GTK_LABEL(pref##_desc), TRUE);                      \
+    gtk_label_set_justify(GTK_LABEL(pref##_desc), GTK_JUSTIFY_LEFT);            \
+    gtk_misc_set_alignment(GTK_MISC(pref##_desc), 0, 0.5);                      \
+    gtk_box_pack_start(GTK_BOX(pref##_vbox), pref##_desc, FALSE, FALSE, 0);     \
+    gtk_widget_show(pref##_desc);                                               \
+                                                                                \
+    pref##_hbox = gtk_hbox_new(FALSE, 5);                                       \
+    gtk_box_pack_start(GTK_BOX(pref##_vbox), pref##_hbox, FALSE, FALSE, 0);     \
+                                                                                \
+    pref##_button = gtk_check_button_new_with_label(descr);                     \
+    gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(pref##_button), use_##pref); \
+    gtk_box_pack_start(GTK_BOX(pref##_hbox), pref##_button, FALSE, FALSE, 0);   \
+                                                                                \
+    gtk_widget_show(pref##_frame);                                              \
+    gtk_widget_show(pref##_vbox);                                               \
+    gtk_widget_show(pref##_button);                                             \
+    gtk_widget_show(pref##_hbox);
+
+void configure(void)
+{
+    GtkWidget *configure_vbox;
+    GtkWidget *xidle_hbox, *xidle_vbox, *xidle_frame, *xidle_desc; 
+    GtkWidget *configure_bbox, *configure_ok, *configure_cancel;
+
+    if (configure_win)
+        return;
+
+    read_config();
+
+    configure_win = gtk_window_new(GTK_WINDOW_TOPLEVEL);
+    gtk_signal_connect(GTK_OBJECT(configure_win), "destroy",
+            GTK_SIGNAL_FUNC(gtk_widget_destroyed), &configure_win);
+    gtk_window_set_title(GTK_WINDOW(configure_win), "IMMS Configuration");
+
+    gtk_container_set_border_width(GTK_CONTAINER(configure_win), 10);
+
+    configure_vbox = gtk_vbox_new(FALSE, 10);
+    gtk_container_add(GTK_CONTAINER(configure_win), configure_vbox);
+
+    ADD_CONFIG_CHECKBOX(xidle, "Idleness", 
+#ifdef BMP
+            "Disable this option if you use BEEP on a dedicated machine",
+#elif AUDACIOUS
+            "Disable this option if you use Audacious on a dedicated machine",
+#endif
+            "Use X idleness statistics");
+
+    /* Buttons */
+    configure_bbox = gtk_hbutton_box_new();
+    gtk_button_box_set_layout(GTK_BUTTON_BOX(configure_bbox), GTK_BUTTONBOX_END);
+    gtk_button_box_set_spacing(GTK_BUTTON_BOX(configure_bbox), 5);
+    gtk_box_pack_start(GTK_BOX(configure_vbox), configure_bbox, FALSE, FALSE, 0);
+
+    configure_ok = gtk_button_new_with_label("Ok");
+    gtk_signal_connect(GTK_OBJECT(configure_ok), "clicked",
+            GTK_SIGNAL_FUNC(configure_ok_cb), NULL);
+    GTK_WIDGET_SET_FLAGS(configure_ok, GTK_CAN_DEFAULT);
+    gtk_box_pack_start(GTK_BOX(configure_bbox), configure_ok, TRUE, TRUE, 0);
+    gtk_widget_show(configure_ok);
+    gtk_widget_grab_default(configure_ok);
+
+    configure_cancel = gtk_button_new_with_label("Cancel");
+    gtk_signal_connect_object(GTK_OBJECT(configure_cancel), "clicked",
+            GTK_SIGNAL_FUNC(gtk_widget_destroy), GTK_OBJECT(configure_win));
+    GTK_WIDGET_SET_FLAGS(configure_cancel, GTK_CAN_DEFAULT);
+    gtk_box_pack_start(GTK_BOX(configure_bbox), configure_cancel, TRUE, TRUE, 0);
+    gtk_widget_show(configure_cancel);
+    gtk_widget_show(configure_bbox);
+    gtk_widget_show(configure_vbox);
+    gtk_widget_show(configure_win);
+}
+
+void about(void)
+{
+    if (about_win)
+        return;
+
+    about_win =
+#ifdef AUDACIOUS
+        audacious_info_dialog(
+#else
+        xmms_show_message(
+#endif
+            "About IMMS",
+            PACKAGE_STRING "\n\n"
+            "Intelligent Multimedia Management System" "\n\n"
+            "IMMS is an intelligent playlist plug-in for BPM" "\n"
+            "that tracks your listening patterns" "\n"
+            "and dynamically adapts to your taste." "\n\n"
+            "It is incredibly unobtrusive and easy to use" "\n"
+            "as it requires no direct user interaction." "\n\n"
+            "For more information please visit" "\n"
+            "http://www.luminal.org/wiki/index.php/IMMS" "\n\n"
+            "Written by" "\n"
+            "Michael \"mag\" Grigoriev <mag@luminal.org>",
+            "Dismiss", FALSE, NULL, NULL);
+
+    gtk_signal_connect(GTK_OBJECT(about_win), "destroy",
+            GTK_SIGNAL_FUNC(gtk_widget_destroyed), &about_win);
+}
Index: imms-3.1.0-rc4/clients/audacious/rules.mk
===================================================================
--- imms-3.1.0-rc4.orig/clients/audacious/rules.mk	2008-10-01 11:23:17.000000000 -0600
+++ imms-3.1.0-rc4/clients/audacious/rules.mk	2008-10-01 11:25:28.000000000 -0600
@@ -7,15 +7,15 @@ libaudaciousimms-LIBS = $(AUDACIOUSLDFLA
 audaciousinterface-CPPFLAGS=$(AUDACIOUSCPPFLAGS)
 audplugin-CPPFLAGS=$(AUDACIOUSCPPFLAGS)
 
-audaciousinterface.o: bmpinterface.c
+audaciousinterface.o: audaciousinterface.c
 	$(call compile, $(CC), $<, $@, $($*-CFLAGS) $(CFLAGS) $($*-CPPFLAGS) $(CPPFLAGS))
 
 AUDACIOUSDESTDIR=""
 ifeq ($(shell id -u), 0)
-	AUDACIOUSDESTDIR=`pkg-config --variable=general_plugin_dir audacious`
+	AUDACIOUSDESTDIR=`pkg-config --variable=general_plugin_dir audacious --print-errors`
 else
 	AUDACIOUSDESTDIR=${HOME}/.audacious/Plugins/General
 endif
 
 libaudaciousimms.so_install: libaudaciousimms.so
-	${INSTALL} -D $^ $(AUDACIOUSDESTDIR)/libaudaciousimms.so
+	${INSTALL} -D $^ $(AUDACIOUSDESTDIR)/imms.impl
