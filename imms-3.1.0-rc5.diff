Index: imms-3.1.0-rc5/immsd/immsd.cc
===================================================================
--- imms-3.1.0-rc5.orig/immsd/immsd.cc	2008-10-03 09:34:00.000000000 -0600
+++ imms-3.1.0-rc5/immsd/immsd.cc	2008-10-03 09:36:24.000000000 -0600
@@ -231,6 +231,7 @@ void quit(int signum)
     if (loop)
         g_main_quit(loop);
     loop = 0;
+    LOG(INFO) << "goodbye." << endl;
     signal(signum, SIG_DFL);
 }
 
Index: imms-3.1.0-rc5/Makefile
===================================================================
--- imms-3.1.0-rc5.orig/Makefile	2008-10-01 23:18:59.000000000 -0600
+++ imms-3.1.0-rc5/Makefile	2008-10-03 09:40:04.000000000 -0600
@@ -9,6 +9,7 @@ configure: configure.ac
 	autoheader
 	aclocal
 	autoconf
+	[ ! -x config.status ] || ./config.status --recheck
 
 immsconf.h: configure
 	$(error Please run the "configure" script)
@@ -31,6 +32,8 @@ dist: immsconf.h distclean
 	rm -rf /tmp/imms-$(VERSION)/
 	mv configure autogen.sh
 
+all: configure
+
 vars.mk:;
 
 %:
Index: imms-3.1.0-rc5/configure.ac
===================================================================
--- imms-3.1.0-rc5.orig/configure.ac	2008-10-01 23:18:59.000000000 -0600
+++ imms-3.1.0-rc5/configure.ac	2008-10-03 09:36:34.000000000 -0600
@@ -43,8 +43,8 @@ AC_ARG_ENABLE(queuecontrol,
             [enable_queuecontrol=$enableval])
 
 AC_ARG_ENABLE(analyzer,
-            AC_HELP_STRING([--disable-analyzer],
-                           [Disable acoustic song similarity analyzer]),
+            AC_HELP_STRING([--enable-analyzer],
+                           [Enable acoustic song similarity analyzer]),
             [enable_analyzer=$enableval])
 
 AC_ARG_ENABLE(immsremote,
@@ -103,7 +103,7 @@ else
     LIBS="$LIBS $pcre_LIBS"
 fi
 
-if test "$enable_analyzer" != "no"; then
+if test "$enable_analyzer" == "yes"; then
     PKG_CHECK_MODULES([FFTW], [fftw3 >= 3.0],
                       [], [have_fftw=no])
     if test "$have_fftw" = "no"; then
@@ -115,7 +115,7 @@ if test "$enable_analyzer" != "no"; then
     fi
 fi
 
-if test "$enable_analyzer" != "no"; then
+if test "$enable_analyzer" == "yes"; then
     AC_CHECK_HEADERS(torch/KMeans.h,, [have_torch=no])
 
     saved_libs="$LIBS"
@@ -139,10 +139,14 @@ if test "$enable_analyzer" != "no"; then
 fi
 
 AC_CHECK_TOOL(OBJCOPY, objcopy)
+AC_CHECK_TOOL(OBJDUMP, objdump)
+if test "x$OBJCOPY" = "x"; then
+    AC_CHECK_TOOL(OBJCOPY, gobjcopy)
+    AC_CHECK_TOOL(OBJDUMP, gobjdump)
+fi
 if test "x$OBJCOPY" = "x"; then
     AC_MSG_ERROR("objcopy from GNU binutils >= 2.11.90 not found")
 fi
-AC_CHECK_TOOL(OBJDUMP, objdump)
 dnl extract target and architecture if objdump was found
 if test "x$OBJDUMP" = "x"; then :; else
     AC_MSG_CHECKING(for object target)
@@ -161,7 +165,7 @@ PKG_CHECK_MODULES([GLIB], [glib-2.0 >= 2
 saved_cppflags="$CPPFLAGS"
 saved_libs="$LIBS"
 
-if test "$enable_analyzer" != "no"; then
+if test "$enable_analyzer" == "yes"; then
     CPPFLAGS="`pkg-config fftw3 --cflags`"
     LIBS="`pkg-config fftw3 --libs`"
     AC_CHECK_HEADERS(fftw3.h,, [with_fftw=no])
@@ -232,7 +236,7 @@ else
     fi
 fi
 
-if test "$enable_analyzer" != "no"; then
+if test "$enable_analyzer" == "yes"; then
     AC_CHECK_PROG(have_sox, sox, "yes", "no")
     if test "$have_sox" = "no"; then
         AC_MSG_WARN([******************************************************]);
@@ -362,7 +366,7 @@ else 
     AC_APPEND(PLUGINS, libaudaciousimms.so)
 fi
 
-if test "$enable_analyzer" != "no"; then
+if test "$enable_analyzer" == "yes"; then
     AC_APPEND(OPTIONAL, analyzer)
     AC_DEFINE(ANALYZER_ENABLED,, [Analyzer enabled])
 fi
Index: imms-3.1.0-rc5/rules.mk
===================================================================
--- imms-3.1.0-rc5.orig/rules.mk	2008-10-01 23:18:59.000000000 -0600
+++ imms-3.1.0-rc5/rules.mk	2008-10-03 09:45:31.000000000 -0600
@@ -14,9 +14,8 @@ link = $(CXX) $(filter-out %.a,$1) $(fil
 %.o: %.c; $(call compile, $(CC), $<, $@, $($*-CFLAGS) $(CFLAGS) $($*-CPPFLAGS) $(CPPFLAGS))
 %: %.o; $(call link, $^ $($*-OBJ) $(LIBS), $@, $($*-LIBS) $(LDFLAGS))
 %.so:
-	$(CXX) $^ $($*-OBJ) $($*-LIBS) $(LIBS) \
-	    $(LDFLAGS) \
-            -shared -Wl,-z,defs,-soname,$@ -o $@
+	$(CXX) -flat_namespace -undefined suppress -o $@ -bundle $^ $($*-OBJ) $($*-LIBS) $(LIBS) \
+	    $(LDFLAGS) -o $@
 
 %-data.o: %
 	$(OBJCOPY) -I binary -O $(OBJCOPYTARGET) -B $(OBJCOPYARCH) --rename-section .data=.rodata,alloc,load,readonly,data,contents $< $@
@@ -26,9 +25,9 @@ objects=$(sort $(notdir $(foreach type,c
 objects_c=$(patsubst %.c,%.o,$(wildcard $(addsuffix /*.c,$1)))
 objects_cc=$(patsubst %.cc,%.o,$(wildcard $(addsuffix /*.cc,$1)))
 
-.PHONY: install analyzer_install immsremote_install
+.PHONY: install analyzer_install immsremote_install immstool_install
 
 install: all plugins_install programs_install
 
 programs_install: $(patsubst %,%_install,$(OPTIONAL))
-	${INSTALL} -D immsd immstool $(bindir)
+	${INSTALL} -D immsd $(bindir)
Index: imms-3.1.0-rc5/build/Makefile
===================================================================
--- imms-3.1.0-rc5.orig/build/Makefile	2008-10-01 23:18:59.000000000 -0600
+++ imms-3.1.0-rc5/build/Makefile	2008-10-03 09:46:16.000000000 -0600
@@ -8,7 +8,7 @@ first: ../configure
 
 include ../rules.mk
 
-all: immsd immstool $(OPTIONAL) $(PLUGINS)
+all: immsd $(OPTIONAL) $(PLUGINS)
 
 training: training_data train_model
 
@@ -58,3 +58,6 @@ immsremote_install: immsremote glade_ins
 
 glade_install: ../immsremote/immsremote.glade
 	${INSTALL} -m 644 -D $< $(datadir)/imms/immsremote.glade
+
+immstool_install: immstool
+	${INSTALL} -D immstool $(bindir)
Index: imms-3.1.0-rc5/README.osx
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ imms-3.1.0-rc5/README.osx	2008-10-03 09:46:30.000000000 -0600
@@ -0,0 +1,20 @@
+Presently the analyzer doesn't work, so it is disabled by default. If you are
+interested in trying to remedy this situation, and you know a thing or two
+about objcopy and other wizardry, see http://tinyurl.com/4ctrmr.
+
+As a result, you shouldn't need Torch or FFTW3, but you will need the other IMMS
+dependencies from e.g. MacPorts (http://www.macports.org/):
+
+    pcre
+    glib2
+    taglib
+
+Finally, just
+
+    ./configure
+    make
+    sudo make install
+
+Let me know if this doesn't work for you.
+
+-- Hans Fugal <hans@fugal.net>
